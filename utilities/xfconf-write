#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="05-05-2021"

# usage #

settings_file="${1}"

if [[ $# -lt 1 ]]
then
	echo "Usage: ${script} [SEtTINGS FILE] | [OPTION]"
	exit 1
fi

# variables #

user="$(whoami)"

# write settings

console.inf "Writing settings."
echo

grep -viE '^\s*((#|;).*)?$' "${settings_file}" | while read channel property value
do
	# provide data type:
	# needs to be researched before making a new .xfconf file
	# “bool”   - boolean value: either “true” or “false”
	# “int”    - 32-bit signed integer value, in the range from -2·147·483·648 through 2·147·483·647
	# “uint”   - 32-bit unsigned integer value, in the range from 0 through 4·294·967·295
	# “int64”  - 64-bit signed integer value, in the range from -9·223·372·036·854·775·808 through 9·223·372·036·854·775·807
	# “uint64” - 64-bit unsigned integer value, in the range from 0 through 18·446·744·073·709·551·615
	# “double” - presumably a double-precision floating-point value, even though it will be stored as a fixed-point value instead, with six decimal places following the decimal point
	# “string” - character string.

	# parse data types

	if [[ ${value} = "true" ]] || [[ ${value} = "false" ]]
	then
		type=bool

	elif [[ ${value} =~ ^[-+]?[0-9]+\.[0-9]*$ ]]
	then
		type=double

	elif [[ ${value} -lt 2147438647 ]] || [[ ${value} -gt -2147438647 ]]
	then
		type=int

	elif [[ ${value} -lt 4294967295 ]] || [[ ${value} -gt 0 ]]
	then
		type=uint

	elif [[ ${value} -lt 9223372036854775807 ]] || [[ ${value} -gt -9223372036854775807 ]]
	then
		type=int64

	elif [[ ${value} -lt 18446744073709551615 ]] || [[ ${value} -gt 0 ]]
	then
		type=uint64

	else
		type=string


	fi

	# write settings

	xfconf-query				\
		--create				\
			-c "${channel}"		\
			-p "${property}"	\
			-t "${type}"		\
			-s "${value}"

	# sudo su - "${user}"										\
	#	-c "DISPLAY=${DISPLAY}									\
	#	DBUS_SESSION_BUS_ADDRESS=${DBUS_SESSION_BUS_ADDRESS}	\
	# xfconf-query												\
	#	--create												\
	#		-t ${type}											\
	#		-c ${channel}										\
	#		-p ${property}										\
	#		-s ${value}"
done

# refresh

xfwm4 --replace &
