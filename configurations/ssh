#!/bin/bash

# Author: Nathanel Titane - nathanel.titane@gmail.com

# dependencies #

curl -sL dep.dxtp.app/console > /usr/bin/console && source /usr/bin/console

# variables #

user="${SUDO_USER:-$USER}"
home="/home/${SUDO_USER:-$USER}"

# convert hostname to lowercase to match hostnames array content

hostname=${HOSTNAME,,}

hostnames=(
	asgeir
	fenrir
	sleipnir
	gleipnir
	mjolnir
	gungnir
	draupnir
	skirnir
)

# configuration #

console.info "Writing configuration."

cat <<- 'FILE' > /etc/ssh/sshd_config
# Configuration #

Port 22

#	ListenAddress ::
#	ListenAddress 0.0.0.0

	Protocol 2

	HostKey /etc/ssh/ssh_host_rsa_key
	HostKey /etc/ssh/ssh_host_dsa_key
	HostKey /etc/ssh/ssh_host_ecdsa_key
	UsePrivilegeSeparation yes

	KeyRegenerationInterval 3600
	ServerKeyBits 768

	SyslogFacility AUTH
	LogLevel INFO

	LoginGraceTime 120
	PermitRootLogin yes
	StrictModes yes

	RSAAuthentication yes
	PubkeyAuthentication yes
#	AuthorizedKeysFile%h/.ssh/authorized_keys

	IgnoreRhosts yes
	RhostsRSAAuthentication no
	HostbasedAuthentication no
#	IgnoreUserKnownHosts yes

	PermitEmptyPasswords no

	ChallengeResponseAuthentication no

	PasswordAuthentication yes

#	KerberosAuthentication no
#	KerberosGetAFSToken no
#	KerberosOrLocalPasswd yes
#	KerberosTicketCleanup yes

#	GSSAPI options
#	GSSAPIAuthentication no
#	GSSAPICleanupCredentials yes

	X11Forwarding yes
	X11DisplayOffset 10
	PrintMotd no
	PrintLastLog yes
	TCPKeepAlive yes
#	UseLogin no

#	MaxStartups 10:30:60
#	Banner /etc/issue.net

	AcceptEnv LANG LC_*

	Subsystem sftp /usr/lib/openssh/sftp-server

	UsePAM yes
FILE

cat <<- 'FILE' > /etc/ssh/ssh_config
# Configuration #

Host *
#	AddressFamily any
#	BatchMode no
#	CheckHostIP yes
#	Cipher 3des
#	Ciphers aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc
#	ConnectTimeout 0
#	EscapeChar ~
#	ForwardAgent no
	ForwardX11Trusted yes
	ForwardAgent yes
	ForwardX11 yes
#	GSSAPIAuthentication no
	GSSAPIAuthentication yes
#	GSSAPIDelegateCredentials no
	GSSAPIDelegateCredentials no
#	GSSAPIKeyExchange no
#	GSSAPITrustDNS no
	HashKnownHosts yes
#	HostbasedAuthentication no
#	IdentityFile ~/.ssh/id_dsa
#	IdentityFile ~/.ssh/identity
#	IdentityFile ~/.ssh/id_rsa
#	MACs hmac-md5,hmac-sha1,umac-64@openssh.com,hmac-ripemd160
	PasswordAuthentication yes
#	PermitLocalCommand no
	Port 22
#	Protocol 2,1
#	ProxyCommand ssh -q -W %h:%p gateway.example.com
#	RhostsRSAAuthentication no
#	RSAAuthentication yes
	SendEnv LANG LC_*
#	StrictHostKeyChecking ask
#	TunnelDevice any:any
#	Tunnel no
#	VisualHostKey no
FILE

console.warning "Restarting service."

sudo service sshd restart > /dev/null

wait

console.warning "Generating access configuration file."

cat <<- 'FILE' > /media/Internal/MEGA/.ssh/config
# skirnir

Host skirnir
	HostName skirnir.blendercluster.com
	User webmaster
	IdentityFile ~/.ssh/.keys/skirnir.key
	IdentitiesOnly yes
	ProxyCommand ssh gungnir nc %h %p
	Port 22

# mjolnir

Host mjolnir
	HostName blendercluster.com
	User webmaster
	IdentityFile ~/.ssh/.keys/mjolnir.key
	IdentitiesOnly yes
	Port 22

# gungnir

Host gungnir
	HostName blendercluster.com
	User webmaster
	IdentityFile ~/.ssh/.keys/gungnir.key
	IdentitiesOnly yes
	Port 22
FILE

# authorized keys file check

[ ! -f /media/Internal/MEGA/.ssh/authorized_keys ] && touch /media/Internal/MEGA/.ssh/authorized_keys ||:

# local #

if [ -d "${HOME}"/.ssh ]
then
	rm -rf "${HOME}"/.ssh
	cp -rf /media/Internal/MEGA/.ssh "${HOME}"/.ssh
else
	if [ ! -d "${HOME}"/.ssh ]
	then
		cp -rf /media/Internal/MEGA/.ssh "${HOME}"/.ssh
	fi
fi

console.info "Securing directories, files, keys and access."

directories=(
	"${HOME}"/.ssh
	/media/Internal/MEGA/.ssh
	)

for directory in ${directories[@]}
do
	# set ownership

	sudo chown "$user" "$directory"
	sudo chown "$user" "$directory"/*
	sudo chown "$user" "$directory"/.keys/
	sudo chown "$user" "$directory"/.keys/*

	# set permissions

	sudo chmod 755 "$directory"
	sudo chmod 755 "$directory"/known_hosts
	sudo chmod 400 "$directory"/.keys/*
	sudo chmod 600 "$directory"/config
	sudo chmod 600 "$directory"/authorized_keys
done